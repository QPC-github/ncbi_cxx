/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'trackmgr.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/trackmgr/trackmgr_client.hpp>
#include <objects/trackmgr/TMgr_DisplayTrackReply.hpp>
#include <objects/trackmgr/TMgr_SwitchTrackContextRep.hpp>
#include <objects/trackmgr/TMgr_TrackAttrValueReply.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CTrackMgrClient_Base::Ask(const CTrackMgrClient_Base::TRequest& request, CTrackMgrClient_Base::TReply& reply, CTrackMgrClient_Base::TReplyChoice::E_Choice wanted)
{
    Ask(request, reply);
    TReplyChoice& rc = x_Choice(reply);
    if (rc.Which() == wanted) {
        return; // ok
    } else {
        rc.ThrowInvalidSelection(wanted);
    }
}

CRef<CTMgr_DisplayTrackReply> CTrackMgrClient_Base::AskDisplay_tracks(const CTMgr_DisplayTrackRequest& req, CTrackMgrClient_Base::TReply* reply)
{
    TRequestChoice request;
    TReply         reply0;
    request.SetDisplay_tracks(const_cast<CTMgr_DisplayTrackRequest&>(req));
    if ( !reply ) {
        reply = &reply0;
    }
    Ask(request, *reply, TReplyChoice::e_Display_tracks);
    return CRef<CTMgr_DisplayTrackReply>(&x_Choice(*reply).SetDisplay_tracks());
}

CRef<CTMgr_SwitchTrackContextReply> CTrackMgrClient_Base::AskSwitch_display_tracks(const CTMgr_SwitchTrackContextRequest& req, CTrackMgrClient_Base::TReply* reply)
{
    TRequestChoice request;
    TReply         reply0;
    request.SetSwitch_display_tracks(const_cast<CTMgr_SwitchTrackContextRequest&>(req));
    if ( !reply ) {
        reply = &reply0;
    }
    Ask(request, *reply, TReplyChoice::e_Switch_display_tracks);
    return CRef<CTMgr_SwitchTrackContextReply>(&x_Choice(*reply).SetSwitch_display_tracks());
}

CRef<CTMgr_TrackAttrValueReply> CTrackMgrClient_Base::AskTrack_attr_values(const CTMgr_TrackAttrValueRequest& req, CTrackMgrClient_Base::TReply* reply)
{
    TRequestChoice request;
    TReply         reply0;
    request.SetTrack_attr_values(const_cast<CTMgr_TrackAttrValueRequest&>(req));
    if ( !reply ) {
        reply = &reply0;
    }
    Ask(request, *reply, TReplyChoice::e_Track_attr_values);
    return CRef<CTMgr_TrackAttrValueReply>(&x_Choice(*reply).SetTrack_attr_values());
}

// constructor
CTrackMgrClient_Base::CTrackMgrClient_Base(void)
    : Tparent(kEmptyStr)
{
}

// destructor
CTrackMgrClient_Base::~CTrackMgrClient_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

