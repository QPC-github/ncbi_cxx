/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'blast.asn'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <objects/blast/Blast4_common_options.hpp>
#include <objects/blast/Blas_comm_opti_nucle_query.hpp>
#include <objects/blast/Blas_comm_opti_query_filte.hpp>
#include <objects/blast/Blast_commo_optio_db_restr.hpp>
#include <objects/blast/Blast_common_option_scorin.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

void CBlast4_common_options_Base::ResetDb_restriction(void)
{
    m_Db_restriction.Reset();
}

void CBlast4_common_options_Base::SetDb_restriction(CBlast4_common_options_Base::TDb_restriction& value)
{
    m_Db_restriction.Reset(&value);
}

CBlast4_common_options_Base::TDb_restriction& CBlast4_common_options_Base::SetDb_restriction(void)
{
    if ( !m_Db_restriction )
        m_Db_restriction.Reset(new ncbi::objects::CBlast4_common_options_db_restriction());
    return (*m_Db_restriction);
}

void CBlast4_common_options_Base::ResetQuery_filtering(void)
{
    m_Query_filtering.Reset();
}

void CBlast4_common_options_Base::SetQuery_filtering(CBlast4_common_options_Base::TQuery_filtering& value)
{
    m_Query_filtering.Reset(&value);
}

CBlast4_common_options_Base::TQuery_filtering& CBlast4_common_options_Base::SetQuery_filtering(void)
{
    if ( !m_Query_filtering )
        m_Query_filtering.Reset(new ncbi::objects::CBlast4_common_options_query_filtering());
    return (*m_Query_filtering);
}

void CBlast4_common_options_Base::ResetNucl_query_options(void)
{
    m_Nucl_query_options.Reset();
}

void CBlast4_common_options_Base::SetNucl_query_options(CBlast4_common_options_Base::TNucl_query_options& value)
{
    m_Nucl_query_options.Reset(&value);
}

CBlast4_common_options_Base::TNucl_query_options& CBlast4_common_options_Base::SetNucl_query_options(void)
{
    if ( !m_Nucl_query_options )
        m_Nucl_query_options.Reset(new ncbi::objects::CBlast4_common_options_nucleotide_query());
    return (*m_Nucl_query_options);
}

void CBlast4_common_options_Base::ResetScoring_options(void)
{
    m_Scoring_options.Reset();
}

void CBlast4_common_options_Base::SetScoring_options(CBlast4_common_options_Base::TScoring_options& value)
{
    m_Scoring_options.Reset(&value);
}

CBlast4_common_options_Base::TScoring_options& CBlast4_common_options_Base::SetScoring_options(void)
{
    if ( !m_Scoring_options )
        m_Scoring_options.Reset(new ncbi::objects::CBlast4_common_options_scoring());
    return (*m_Scoring_options);
}

void CBlast4_common_options_Base::ResetPhi_pattern(void)
{
    m_Phi_pattern.erase();
    m_set_State[0] &= ~0x30000;
}

void CBlast4_common_options_Base::Reset(void)
{
    ResetPercent_identity();
    ResetEvalue();
    ResetWord_size();
    ResetHitlist_size();
    ResetDb_restriction();
    ResetQuery_filtering();
    ResetNucl_query_options();
    ResetScoring_options();
    ResetPhi_pattern();
    ResetEff_search_space();
    ResetComp_based_statistics();
}

BEGIN_NAMED_BASE_CLASS_INFO("Blast4-common-options", CBlast4_common_options)
{
    SET_CLASS_MODULE("NCBI-Blast4");
    ADD_NAMED_STD_MEMBER("percent-identity", m_Percent_identity)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("evalue", m_Evalue)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("word-size", m_Word_size)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("hitlist-size", m_Hitlist_size)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_REF_MEMBER("db-restriction", m_Db_restriction, CBlast4_common_options_db_restriction)->SetOptional();
    ADD_NAMED_REF_MEMBER("query-filtering", m_Query_filtering, CBlast4_common_options_query_filtering)->SetOptional();
    ADD_NAMED_REF_MEMBER("nucl-query-options", m_Nucl_query_options, CBlast4_common_options_nucleotide_query)->SetOptional();
    ADD_NAMED_REF_MEMBER("scoring-options", m_Scoring_options, CBlast4_common_options_scoring)->SetOptional();
    ADD_NAMED_STD_MEMBER("phi-pattern", m_Phi_pattern)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("eff-search-space", m_Eff_search_space)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    ADD_NAMED_STD_MEMBER("comp-based-statistics", m_Comp_based_statistics)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]));
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CBlast4_common_options_Base::CBlast4_common_options_Base(void)
    : m_Percent_identity(0), m_Evalue(0), m_Word_size(0), m_Hitlist_size(0), m_Eff_search_space(0), m_Comp_based_statistics(0)
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CBlast4_common_options_Base::~CBlast4_common_options_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

