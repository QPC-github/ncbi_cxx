/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 * File Description:
 *   This code was generated by application DATATOOL
 *   using the following specifications:
 *   'pepXML.xsd'.
 *
 * ATTENTION:
 *   Don't edit or commit this file into CVS as this file will
 *   be overridden (by DATATOOL) without warning!
 * ===========================================================================
 */

// standard includes
#include <ncbi_pch.hpp>
#include <serial/serialimpl.hpp>

// generated includes
#include <algo/ms/formats/pepxml/Search_database.hpp>
BEGIN_NCBI_SCOPE

BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

BEGIN_NAMED_ENUM_IN_INFO("", CSearch_database_Base::C_Attlist::, EAttlist_type, false)
{
    SET_ENUM_INTERNAL_NAME("search_database.Attlist", "type");
    SET_ENUM_MODULE("pepXML");
    ADD_ENUM_VALUE("AA", eAttlist_type_AA);
    ADD_ENUM_VALUE("NA", eAttlist_type_NA);
}
END_ENUM_INFO

void CSearch_database_Base::C_Attlist::ResetLocal_path(void)
{
    m_Local_path.erase();
    m_set_State[0] &= ~0x3;
}

void CSearch_database_Base::C_Attlist::ResetURL(void)
{
    m_URL.erase();
    m_set_State[0] &= ~0xc;
}

void CSearch_database_Base::C_Attlist::ResetDatabase_name(void)
{
    m_Database_name.erase();
    m_set_State[0] &= ~0x30;
}

void CSearch_database_Base::C_Attlist::ResetOrig_database_url(void)
{
    m_Orig_database_url.erase();
    m_set_State[0] &= ~0xc0;
}

void CSearch_database_Base::C_Attlist::ResetDatabase_release_date(void)
{
    m_Database_release_date.erase();
    m_set_State[0] &= ~0x300;
}

void CSearch_database_Base::C_Attlist::ResetDatabase_release_identifier(void)
{
    m_Database_release_identifier.erase();
    m_set_State[0] &= ~0xc00;
}

void CSearch_database_Base::C_Attlist::Reset(void)
{
    ResetLocal_path();
    ResetURL();
    ResetDatabase_name();
    ResetOrig_database_url();
    ResetDatabase_release_date();
    ResetDatabase_release_identifier();
    ResetSize_in_db_entries();
    ResetSize_of_residues();
    ResetType();
}

BEGIN_NAMED_CLASS_INFO("", CSearch_database_Base::C_Attlist)
{
    SET_INTERNAL_NAME("search_database", "Attlist");
    SET_CLASS_MODULE("pepXML");
    ADD_NAMED_STD_MEMBER("local_path", m_Local_path)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("URL", m_URL)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("database_name", m_Database_name)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("orig_database_url", m_Orig_database_url)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("database_release_date", m_Database_release_date)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("database_release_identifier", m_Database_release_identifier)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("size_in_db_entries", m_Size_in_db_entries)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_STD_MEMBER("size_of_residues", m_Size_of_residues)->SetOptional()->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    ADD_NAMED_ENUM_MEMBER("type", m_Type, EAttlist_type)->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix();
    info->SetRandomOrder(true);
}
END_CLASS_INFO

// constructor
CSearch_database_Base::C_Attlist::C_Attlist(void)
    : m_Size_in_db_entries(0), m_Size_of_residues(0), m_Type((EAttlist_type)(0))
{
    memset(m_set_State,0,sizeof(m_set_State));
}

// destructor
CSearch_database_Base::C_Attlist::~C_Attlist(void)
{
}


void CSearch_database_Base::ResetAttlist(void)
{
    if ( !m_Attlist ) {
        m_Attlist.Reset(new TAttlist());
        return;
    }
    (*m_Attlist).Reset();
}

void CSearch_database_Base::SetAttlist(CSearch_database_Base::TAttlist& value)
{
    m_Attlist.Reset(&value);
    SetSearch_database();
}

void CSearch_database_Base::Reset(void)
{
    ResetAttlist();
    ResetSearch_database();
}

BEGIN_NAMED_BASE_CLASS_INFO("search_database", CSearch_database)
{
    SET_CLASS_MODULE("pepXML");
    SET_NAMESPACE("http://regis-web.systemsbiology.net/pepXML")->SetNsQualified(true);
    ADD_NAMED_REF_MEMBER("Attlist", m_Attlist, C_Attlist)->SetNoPrefix()->SetAttlist();
    ADD_NAMED_NULL_MEMBER("search_database", null, ())->SetSetFlag(MEMBER_PTR(m_set_State[0]))->SetNoPrefix()->SetNotag();
    info->RandomOrder();
}
END_CLASS_INFO

// constructor
CSearch_database_Base::CSearch_database_Base(void)
{
    memset(m_set_State,0,sizeof(m_set_State));
    if ( !IsAllocatedInPool() ) {
        ResetAttlist();
    }
}

// destructor
CSearch_database_Base::~CSearch_database_Base(void)
{
}



END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE

