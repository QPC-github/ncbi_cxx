/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Asapratio_contribution_.hpp
/// Data storage class.
///
/// This file was generated by application DATATOOL
/// using the following specifications:
/// 'pepXML.xsd'.
///
/// ATTENTION:
///   Don't edit or commit this file into CVS as this file will
///   be overridden (by DATATOOL) without warning!

#ifndef ALGO_MS_FORMATS_PEPXML_ASAPRATIO_CONTRIBUTION_BASE_HPP
#define ALGO_MS_FORMATS_PEPXML_ASAPRATIO_CONTRIBUTION_BASE_HPP

// standard includes
#include <serial/serialbase.hpp>
BEGIN_NCBI_SCOPE

#ifndef BEGIN_objects_SCOPE
#  define BEGIN_objects_SCOPE BEGIN_SCOPE(objects)
#  define END_objects_SCOPE END_SCOPE(objects)
#endif
BEGIN_objects_SCOPE // namespace ncbi::objects::


// forward declarations
class CAsapratio_lc_heavypeak;
class CAsapratio_lc_lightpeak;


// generated classes

/////////////////////////////////////////////////////////////////////////////
class NCBI_PEPXML_EXPORT CAsapratio_contribution_Base : public CSerialObject
{
    typedef CSerialObject Tparent;
public:
    // constructor
    CAsapratio_contribution_Base(void);
    // destructor
    virtual ~CAsapratio_contribution_Base(void);

    // type info
    DECLARE_INTERNAL_TYPE_INFO();

    /////////////////////////////////////////////////////////////////////////////
    class NCBI_PEPXML_EXPORT C_Attlist : public CSerialObject
    {
        typedef CSerialObject Tparent;
    public:
        // constructor
        C_Attlist(void);
        // destructor
        ~C_Attlist(void);
    
        // type info
        DECLARE_INTERNAL_TYPE_INFO();
    
        // types
        typedef double TRatio;
        typedef double TError;
        typedef int TCharge;
        typedef int TUse;
    
        // getters
        // setters
    
        /// mandatory
        /// typedef double TRatio
        ///  Check whether the Ratio data member has been assigned a value.
        bool IsSetRatio(void) const;
        /// Check whether it is safe or not to call GetRatio method.
        bool CanGetRatio(void) const;
        void ResetRatio(void);
        TRatio GetRatio(void) const;
        void SetRatio(TRatio value);
        TRatio& SetRatio(void);
    
        /// mandatory
        /// typedef double TError
        ///  Check whether the Error data member has been assigned a value.
        bool IsSetError(void) const;
        /// Check whether it is safe or not to call GetError method.
        bool CanGetError(void) const;
        void ResetError(void);
        TError GetError(void) const;
        void SetError(TError value);
        TError& SetError(void);
    
        /// mandatory
        /// typedef int TCharge
        ///  Check whether the Charge data member has been assigned a value.
        bool IsSetCharge(void) const;
        /// Check whether it is safe or not to call GetCharge method.
        bool CanGetCharge(void) const;
        void ResetCharge(void);
        TCharge GetCharge(void) const;
        void SetCharge(TCharge value);
        TCharge& SetCharge(void);
    
        /// mandatory
        /// typedef int TUse
        ///  Check whether the Use data member has been assigned a value.
        bool IsSetUse(void) const;
        /// Check whether it is safe or not to call GetUse method.
        bool CanGetUse(void) const;
        void ResetUse(void);
        TUse GetUse(void) const;
        void SetUse(TUse value);
        TUse& SetUse(void);
    
        /// Reset the whole object
        void Reset(void);
    
    
    private:
        // Prohibit copy constructor and assignment operator
        C_Attlist(const C_Attlist&);
        C_Attlist& operator=(const C_Attlist&);
    
        // data
        Uint4 m_set_State[1];
        double m_Ratio;
        double m_Error;
        int m_Charge;
        int m_Use;
    };
    // types
    typedef C_Attlist TAttlist;
    typedef CAsapratio_lc_lightpeak TAsapratio_lc_lightpeak;
    typedef CAsapratio_lc_heavypeak TAsapratio_lc_heavypeak;

    // getters
    // setters

    /// mandatory
    /// typedef C_Attlist TAttlist
    ///  Check whether the Attlist data member has been assigned a value.
    bool IsSetAttlist(void) const;
    /// Check whether it is safe or not to call GetAttlist method.
    bool CanGetAttlist(void) const;
    void ResetAttlist(void);
    const TAttlist& GetAttlist(void) const;
    void SetAttlist(TAttlist& value);
    TAttlist& SetAttlist(void);

    /// mandatory
    /// typedef CAsapratio_lc_lightpeak TAsapratio_lc_lightpeak
    ///  Check whether the Asapratio_lc_lightpeak data member has been assigned a value.
    bool IsSetAsapratio_lc_lightpeak(void) const;
    /// Check whether it is safe or not to call GetAsapratio_lc_lightpeak method.
    bool CanGetAsapratio_lc_lightpeak(void) const;
    void ResetAsapratio_lc_lightpeak(void);
    const TAsapratio_lc_lightpeak& GetAsapratio_lc_lightpeak(void) const;
    void SetAsapratio_lc_lightpeak(TAsapratio_lc_lightpeak& value);
    TAsapratio_lc_lightpeak& SetAsapratio_lc_lightpeak(void);

    /// mandatory
    /// typedef CAsapratio_lc_heavypeak TAsapratio_lc_heavypeak
    ///  Check whether the Asapratio_lc_heavypeak data member has been assigned a value.
    bool IsSetAsapratio_lc_heavypeak(void) const;
    /// Check whether it is safe or not to call GetAsapratio_lc_heavypeak method.
    bool CanGetAsapratio_lc_heavypeak(void) const;
    void ResetAsapratio_lc_heavypeak(void);
    const TAsapratio_lc_heavypeak& GetAsapratio_lc_heavypeak(void) const;
    void SetAsapratio_lc_heavypeak(TAsapratio_lc_heavypeak& value);
    TAsapratio_lc_heavypeak& SetAsapratio_lc_heavypeak(void);

    /// Reset the whole object
    virtual void Reset(void);


private:
    // Prohibit copy constructor and assignment operator
    CAsapratio_contribution_Base(const CAsapratio_contribution_Base&);
    CAsapratio_contribution_Base& operator=(const CAsapratio_contribution_Base&);

    // data
    Uint4 m_set_State[1];
    CRef< TAttlist > m_Attlist;
    CRef< TAsapratio_lc_lightpeak > m_Asapratio_lc_lightpeak;
    CRef< TAsapratio_lc_heavypeak > m_Asapratio_lc_heavypeak;
};






///////////////////////////////////////////////////////////
///////////////////// inline methods //////////////////////
///////////////////////////////////////////////////////////
inline
bool CAsapratio_contribution_Base::C_Attlist::IsSetRatio(void) const
{
    return ((m_set_State[0] & 0x3) != 0);
}

inline
bool CAsapratio_contribution_Base::C_Attlist::CanGetRatio(void) const
{
    return IsSetRatio();
}

inline
void CAsapratio_contribution_Base::C_Attlist::ResetRatio(void)
{
    m_Ratio = 0;
    m_set_State[0] &= ~0x3;
}

inline
CAsapratio_contribution_Base::C_Attlist::TRatio CAsapratio_contribution_Base::C_Attlist::GetRatio(void) const
{
    if (!CanGetRatio()) {
        ThrowUnassigned(0);
    }
    return m_Ratio;
}

inline
void CAsapratio_contribution_Base::C_Attlist::SetRatio(CAsapratio_contribution_Base::C_Attlist::TRatio value)
{
    m_Ratio = value;
    m_set_State[0] |= 0x3;
}

inline
CAsapratio_contribution_Base::C_Attlist::TRatio& CAsapratio_contribution_Base::C_Attlist::SetRatio(void)
{
#ifdef _DEBUG
    if (!IsSetRatio()) {
        memset(&m_Ratio,UnassignedByte(),sizeof(m_Ratio));
    }
#endif
    m_set_State[0] |= 0x1;
    return m_Ratio;
}

inline
bool CAsapratio_contribution_Base::C_Attlist::IsSetError(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAsapratio_contribution_Base::C_Attlist::CanGetError(void) const
{
    return IsSetError();
}

inline
void CAsapratio_contribution_Base::C_Attlist::ResetError(void)
{
    m_Error = 0;
    m_set_State[0] &= ~0xc;
}

inline
CAsapratio_contribution_Base::C_Attlist::TError CAsapratio_contribution_Base::C_Attlist::GetError(void) const
{
    if (!CanGetError()) {
        ThrowUnassigned(1);
    }
    return m_Error;
}

inline
void CAsapratio_contribution_Base::C_Attlist::SetError(CAsapratio_contribution_Base::C_Attlist::TError value)
{
    m_Error = value;
    m_set_State[0] |= 0xc;
}

inline
CAsapratio_contribution_Base::C_Attlist::TError& CAsapratio_contribution_Base::C_Attlist::SetError(void)
{
#ifdef _DEBUG
    if (!IsSetError()) {
        memset(&m_Error,UnassignedByte(),sizeof(m_Error));
    }
#endif
    m_set_State[0] |= 0x4;
    return m_Error;
}

inline
bool CAsapratio_contribution_Base::C_Attlist::IsSetCharge(void) const
{
    return ((m_set_State[0] & 0x30) != 0);
}

inline
bool CAsapratio_contribution_Base::C_Attlist::CanGetCharge(void) const
{
    return IsSetCharge();
}

inline
void CAsapratio_contribution_Base::C_Attlist::ResetCharge(void)
{
    m_Charge = 0;
    m_set_State[0] &= ~0x30;
}

inline
CAsapratio_contribution_Base::C_Attlist::TCharge CAsapratio_contribution_Base::C_Attlist::GetCharge(void) const
{
    if (!CanGetCharge()) {
        ThrowUnassigned(2);
    }
    return m_Charge;
}

inline
void CAsapratio_contribution_Base::C_Attlist::SetCharge(CAsapratio_contribution_Base::C_Attlist::TCharge value)
{
    m_Charge = value;
    m_set_State[0] |= 0x30;
}

inline
CAsapratio_contribution_Base::C_Attlist::TCharge& CAsapratio_contribution_Base::C_Attlist::SetCharge(void)
{
#ifdef _DEBUG
    if (!IsSetCharge()) {
        memset(&m_Charge,UnassignedByte(),sizeof(m_Charge));
    }
#endif
    m_set_State[0] |= 0x10;
    return m_Charge;
}

inline
bool CAsapratio_contribution_Base::C_Attlist::IsSetUse(void) const
{
    return ((m_set_State[0] & 0xc0) != 0);
}

inline
bool CAsapratio_contribution_Base::C_Attlist::CanGetUse(void) const
{
    return IsSetUse();
}

inline
void CAsapratio_contribution_Base::C_Attlist::ResetUse(void)
{
    m_Use = 0;
    m_set_State[0] &= ~0xc0;
}

inline
CAsapratio_contribution_Base::C_Attlist::TUse CAsapratio_contribution_Base::C_Attlist::GetUse(void) const
{
    if (!CanGetUse()) {
        ThrowUnassigned(3);
    }
    return m_Use;
}

inline
void CAsapratio_contribution_Base::C_Attlist::SetUse(CAsapratio_contribution_Base::C_Attlist::TUse value)
{
    m_Use = value;
    m_set_State[0] |= 0xc0;
}

inline
CAsapratio_contribution_Base::C_Attlist::TUse& CAsapratio_contribution_Base::C_Attlist::SetUse(void)
{
#ifdef _DEBUG
    if (!IsSetUse()) {
        memset(&m_Use,UnassignedByte(),sizeof(m_Use));
    }
#endif
    m_set_State[0] |= 0x40;
    return m_Use;
}

inline
bool CAsapratio_contribution_Base::IsSetAttlist(void) const
{
    return m_Attlist.NotEmpty();
}

inline
bool CAsapratio_contribution_Base::CanGetAttlist(void) const
{
    return true;
}

inline
const CAsapratio_contribution_Base::TAttlist& CAsapratio_contribution_Base::GetAttlist(void) const
{
    if ( !m_Attlist ) {
        const_cast<CAsapratio_contribution_Base*>(this)->ResetAttlist();
    }
    return (*m_Attlist);
}

inline
CAsapratio_contribution_Base::TAttlist& CAsapratio_contribution_Base::SetAttlist(void)
{
    if ( !m_Attlist ) {
        ResetAttlist();
    }
    return (*m_Attlist);
}

inline
bool CAsapratio_contribution_Base::CanGetAsapratio_lc_lightpeak(void) const
{
    return true;
}

inline
const CAsapratio_contribution_Base::TAsapratio_lc_lightpeak& CAsapratio_contribution_Base::GetAsapratio_lc_lightpeak(void) const
{
    if ( !m_Asapratio_lc_lightpeak ) {
        const_cast<CAsapratio_contribution_Base*>(this)->ResetAsapratio_lc_lightpeak();
    }
    return (*m_Asapratio_lc_lightpeak);
}

inline
bool CAsapratio_contribution_Base::CanGetAsapratio_lc_heavypeak(void) const
{
    return true;
}

inline
const CAsapratio_contribution_Base::TAsapratio_lc_heavypeak& CAsapratio_contribution_Base::GetAsapratio_lc_heavypeak(void) const
{
    if ( !m_Asapratio_lc_heavypeak ) {
        const_cast<CAsapratio_contribution_Base*>(this)->ResetAsapratio_lc_heavypeak();
    }
    return (*m_Asapratio_lc_heavypeak);
}

///////////////////////////////////////////////////////////
////////////////// end of inline methods //////////////////
///////////////////////////////////////////////////////////





END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // ALGO_MS_FORMATS_PEPXML_ASAPRATIO_CONTRIBUTION_BASE_HPP
