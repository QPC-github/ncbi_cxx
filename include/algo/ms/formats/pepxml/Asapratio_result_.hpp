/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Asapratio_result_.hpp
/// Data storage class.
///
/// This file was generated by application DATATOOL
/// using the following specifications:
/// 'pepXML.xsd'.
///
/// ATTENTION:
///   Don't edit or commit this file into CVS as this file will
///   be overridden (by DATATOOL) without warning!

#ifndef ALGO_MS_FORMATS_PEPXML_ASAPRATIO_RESULT_BASE_HPP
#define ALGO_MS_FORMATS_PEPXML_ASAPRATIO_RESULT_BASE_HPP

// standard includes
#include <serial/serialbase.hpp>
BEGIN_NCBI_SCOPE

#ifndef BEGIN_objects_SCOPE
#  define BEGIN_objects_SCOPE BEGIN_SCOPE(objects)
#  define END_objects_SCOPE END_SCOPE(objects)
#endif
BEGIN_objects_SCOPE // namespace ncbi::objects::


// forward declarations
class CAsapratio_peptide_data;


// generated classes

/////////////////////////////////////////////////////////////////////////////
///ASAPRatio quantitation results for search hit 
class NCBI_PEPXML_EXPORT CAsapratio_result_Base : public CSerialObject
{
    typedef CSerialObject Tparent;
public:
    // constructor
    CAsapratio_result_Base(void);
    // destructor
    virtual ~CAsapratio_result_Base(void);

    // type info
    DECLARE_INTERNAL_TYPE_INFO();

    /////////////////////////////////////////////////////////////////////////////
    class NCBI_PEPXML_EXPORT C_Attlist : public CSerialObject
    {
        typedef CSerialObject Tparent;
    public:
        // constructor
        C_Attlist(void);
        // destructor
        ~C_Attlist(void);
    
        // type info
        DECLARE_INTERNAL_TYPE_INFO();
    
        // types
        typedef double TMean;
        typedef double TError;
        typedef double THeavy2light_mean;
        typedef double THeavy2light_error;
    
        // getters
        // setters
    
        /// mandatory
        /// typedef double TMean
        ///  Check whether the Mean data member has been assigned a value.
        bool IsSetMean(void) const;
        /// Check whether it is safe or not to call GetMean method.
        bool CanGetMean(void) const;
        void ResetMean(void);
        TMean GetMean(void) const;
        void SetMean(TMean value);
        TMean& SetMean(void);
    
        /// mandatory
        /// typedef double TError
        ///  Check whether the Error data member has been assigned a value.
        bool IsSetError(void) const;
        /// Check whether it is safe or not to call GetError method.
        bool CanGetError(void) const;
        void ResetError(void);
        TError GetError(void) const;
        void SetError(TError value);
        TError& SetError(void);
    
        /// mandatory
        /// typedef double THeavy2light_mean
        ///  Check whether the Heavy2light_mean data member has been assigned a value.
        bool IsSetHeavy2light_mean(void) const;
        /// Check whether it is safe or not to call GetHeavy2light_mean method.
        bool CanGetHeavy2light_mean(void) const;
        void ResetHeavy2light_mean(void);
        THeavy2light_mean GetHeavy2light_mean(void) const;
        void SetHeavy2light_mean(THeavy2light_mean value);
        THeavy2light_mean& SetHeavy2light_mean(void);
    
        /// mandatory
        /// typedef double THeavy2light_error
        ///  Check whether the Heavy2light_error data member has been assigned a value.
        bool IsSetHeavy2light_error(void) const;
        /// Check whether it is safe or not to call GetHeavy2light_error method.
        bool CanGetHeavy2light_error(void) const;
        void ResetHeavy2light_error(void);
        THeavy2light_error GetHeavy2light_error(void) const;
        void SetHeavy2light_error(THeavy2light_error value);
        THeavy2light_error& SetHeavy2light_error(void);
    
        /// Reset the whole object
        void Reset(void);
    
    
    private:
        // Prohibit copy constructor and assignment operator
        C_Attlist(const C_Attlist&);
        C_Attlist& operator=(const C_Attlist&);
    
        // data
        Uint4 m_set_State[1];
        double m_Mean;
        double m_Error;
        double m_Heavy2light_mean;
        double m_Heavy2light_error;
    };
    // types
    typedef C_Attlist TAttlist;
    typedef CAsapratio_peptide_data TAsapratio_peptide_data;

    // getters
    // setters

    /// mandatory
    /// typedef C_Attlist TAttlist
    ///  Check whether the Attlist data member has been assigned a value.
    bool IsSetAttlist(void) const;
    /// Check whether it is safe or not to call GetAttlist method.
    bool CanGetAttlist(void) const;
    void ResetAttlist(void);
    const TAttlist& GetAttlist(void) const;
    void SetAttlist(TAttlist& value);
    TAttlist& SetAttlist(void);

    /// mandatory
    /// typedef CAsapratio_peptide_data TAsapratio_peptide_data
    ///  Check whether the Asapratio_peptide_data data member has been assigned a value.
    bool IsSetAsapratio_peptide_data(void) const;
    /// Check whether it is safe or not to call GetAsapratio_peptide_data method.
    bool CanGetAsapratio_peptide_data(void) const;
    void ResetAsapratio_peptide_data(void);
    const TAsapratio_peptide_data& GetAsapratio_peptide_data(void) const;
    void SetAsapratio_peptide_data(TAsapratio_peptide_data& value);
    TAsapratio_peptide_data& SetAsapratio_peptide_data(void);

    /// Reset the whole object
    virtual void Reset(void);


private:
    // Prohibit copy constructor and assignment operator
    CAsapratio_result_Base(const CAsapratio_result_Base&);
    CAsapratio_result_Base& operator=(const CAsapratio_result_Base&);

    // data
    Uint4 m_set_State[1];
    CRef< TAttlist > m_Attlist;
    CRef< TAsapratio_peptide_data > m_Asapratio_peptide_data;
};






///////////////////////////////////////////////////////////
///////////////////// inline methods //////////////////////
///////////////////////////////////////////////////////////
inline
bool CAsapratio_result_Base::C_Attlist::IsSetMean(void) const
{
    return ((m_set_State[0] & 0x3) != 0);
}

inline
bool CAsapratio_result_Base::C_Attlist::CanGetMean(void) const
{
    return IsSetMean();
}

inline
void CAsapratio_result_Base::C_Attlist::ResetMean(void)
{
    m_Mean = 0;
    m_set_State[0] &= ~0x3;
}

inline
CAsapratio_result_Base::C_Attlist::TMean CAsapratio_result_Base::C_Attlist::GetMean(void) const
{
    if (!CanGetMean()) {
        ThrowUnassigned(0);
    }
    return m_Mean;
}

inline
void CAsapratio_result_Base::C_Attlist::SetMean(CAsapratio_result_Base::C_Attlist::TMean value)
{
    m_Mean = value;
    m_set_State[0] |= 0x3;
}

inline
CAsapratio_result_Base::C_Attlist::TMean& CAsapratio_result_Base::C_Attlist::SetMean(void)
{
#ifdef _DEBUG
    if (!IsSetMean()) {
        memset(&m_Mean,UnassignedByte(),sizeof(m_Mean));
    }
#endif
    m_set_State[0] |= 0x1;
    return m_Mean;
}

inline
bool CAsapratio_result_Base::C_Attlist::IsSetError(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAsapratio_result_Base::C_Attlist::CanGetError(void) const
{
    return IsSetError();
}

inline
void CAsapratio_result_Base::C_Attlist::ResetError(void)
{
    m_Error = 0;
    m_set_State[0] &= ~0xc;
}

inline
CAsapratio_result_Base::C_Attlist::TError CAsapratio_result_Base::C_Attlist::GetError(void) const
{
    if (!CanGetError()) {
        ThrowUnassigned(1);
    }
    return m_Error;
}

inline
void CAsapratio_result_Base::C_Attlist::SetError(CAsapratio_result_Base::C_Attlist::TError value)
{
    m_Error = value;
    m_set_State[0] |= 0xc;
}

inline
CAsapratio_result_Base::C_Attlist::TError& CAsapratio_result_Base::C_Attlist::SetError(void)
{
#ifdef _DEBUG
    if (!IsSetError()) {
        memset(&m_Error,UnassignedByte(),sizeof(m_Error));
    }
#endif
    m_set_State[0] |= 0x4;
    return m_Error;
}

inline
bool CAsapratio_result_Base::C_Attlist::IsSetHeavy2light_mean(void) const
{
    return ((m_set_State[0] & 0x30) != 0);
}

inline
bool CAsapratio_result_Base::C_Attlist::CanGetHeavy2light_mean(void) const
{
    return IsSetHeavy2light_mean();
}

inline
void CAsapratio_result_Base::C_Attlist::ResetHeavy2light_mean(void)
{
    m_Heavy2light_mean = 0;
    m_set_State[0] &= ~0x30;
}

inline
CAsapratio_result_Base::C_Attlist::THeavy2light_mean CAsapratio_result_Base::C_Attlist::GetHeavy2light_mean(void) const
{
    if (!CanGetHeavy2light_mean()) {
        ThrowUnassigned(2);
    }
    return m_Heavy2light_mean;
}

inline
void CAsapratio_result_Base::C_Attlist::SetHeavy2light_mean(CAsapratio_result_Base::C_Attlist::THeavy2light_mean value)
{
    m_Heavy2light_mean = value;
    m_set_State[0] |= 0x30;
}

inline
CAsapratio_result_Base::C_Attlist::THeavy2light_mean& CAsapratio_result_Base::C_Attlist::SetHeavy2light_mean(void)
{
#ifdef _DEBUG
    if (!IsSetHeavy2light_mean()) {
        memset(&m_Heavy2light_mean,UnassignedByte(),sizeof(m_Heavy2light_mean));
    }
#endif
    m_set_State[0] |= 0x10;
    return m_Heavy2light_mean;
}

inline
bool CAsapratio_result_Base::C_Attlist::IsSetHeavy2light_error(void) const
{
    return ((m_set_State[0] & 0xc0) != 0);
}

inline
bool CAsapratio_result_Base::C_Attlist::CanGetHeavy2light_error(void) const
{
    return IsSetHeavy2light_error();
}

inline
void CAsapratio_result_Base::C_Attlist::ResetHeavy2light_error(void)
{
    m_Heavy2light_error = 0;
    m_set_State[0] &= ~0xc0;
}

inline
CAsapratio_result_Base::C_Attlist::THeavy2light_error CAsapratio_result_Base::C_Attlist::GetHeavy2light_error(void) const
{
    if (!CanGetHeavy2light_error()) {
        ThrowUnassigned(3);
    }
    return m_Heavy2light_error;
}

inline
void CAsapratio_result_Base::C_Attlist::SetHeavy2light_error(CAsapratio_result_Base::C_Attlist::THeavy2light_error value)
{
    m_Heavy2light_error = value;
    m_set_State[0] |= 0xc0;
}

inline
CAsapratio_result_Base::C_Attlist::THeavy2light_error& CAsapratio_result_Base::C_Attlist::SetHeavy2light_error(void)
{
#ifdef _DEBUG
    if (!IsSetHeavy2light_error()) {
        memset(&m_Heavy2light_error,UnassignedByte(),sizeof(m_Heavy2light_error));
    }
#endif
    m_set_State[0] |= 0x40;
    return m_Heavy2light_error;
}

inline
bool CAsapratio_result_Base::IsSetAttlist(void) const
{
    return m_Attlist.NotEmpty();
}

inline
bool CAsapratio_result_Base::CanGetAttlist(void) const
{
    return true;
}

inline
const CAsapratio_result_Base::TAttlist& CAsapratio_result_Base::GetAttlist(void) const
{
    if ( !m_Attlist ) {
        const_cast<CAsapratio_result_Base*>(this)->ResetAttlist();
    }
    return (*m_Attlist);
}

inline
CAsapratio_result_Base::TAttlist& CAsapratio_result_Base::SetAttlist(void)
{
    if ( !m_Attlist ) {
        ResetAttlist();
    }
    return (*m_Attlist);
}

inline
bool CAsapratio_result_Base::IsSetAsapratio_peptide_data(void) const
{
    return m_Asapratio_peptide_data.NotEmpty();
}

inline
bool CAsapratio_result_Base::CanGetAsapratio_peptide_data(void) const
{
    return true;
}

inline
const CAsapratio_result_Base::TAsapratio_peptide_data& CAsapratio_result_Base::GetAsapratio_peptide_data(void) const
{
    if ( !m_Asapratio_peptide_data ) {
        const_cast<CAsapratio_result_Base*>(this)->ResetAsapratio_peptide_data();
    }
    return (*m_Asapratio_peptide_data);
}

inline
CAsapratio_result_Base::TAsapratio_peptide_data& CAsapratio_result_Base::SetAsapratio_peptide_data(void)
{
    if ( !m_Asapratio_peptide_data ) {
        ResetAsapratio_peptide_data();
    }
    return (*m_Asapratio_peptide_data);
}

///////////////////////////////////////////////////////////
////////////////// end of inline methods //////////////////
///////////////////////////////////////////////////////////





END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // ALGO_MS_FORMATS_PEPXML_ASAPRATIO_RESULT_BASE_HPP
