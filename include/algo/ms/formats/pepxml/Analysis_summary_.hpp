/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Analysis_summary_.hpp
/// Data storage class.
///
/// This file was generated by application DATATOOL
/// using the following specifications:
/// 'pepXML.xsd'.
///
/// ATTENTION:
///   Don't edit or commit this file into CVS as this file will
///   be overridden (by DATATOOL) without warning!

#ifndef ALGO_MS_FORMATS_PEPXML_ANALYSIS_SUMMARY_BASE_HPP
#define ALGO_MS_FORMATS_PEPXML_ANALYSIS_SUMMARY_BASE_HPP

// standard includes
#include <serial/serialbase.hpp>

// generated includes
#include <list>
#include <string>

BEGIN_NCBI_SCOPE

#ifndef BEGIN_objects_SCOPE
#  define BEGIN_objects_SCOPE BEGIN_SCOPE(objects)
#  define END_objects_SCOPE END_SCOPE(objects)
#endif
BEGIN_objects_SCOPE // namespace ncbi::objects::


// forward declarations
class CAsapratio_summary;
class CInteract_summary;
class CLibra_summary;
class CPeptideprophet_summary;
class CXpressratio_summary;


// generated classes

/////////////////////////////////////////////////////////////////////////////
///Summary of analysis subjected to run(s) 
class NCBI_PEPXML_EXPORT CAnalysis_summary_Base : public CSerialObject
{
    typedef CSerialObject Tparent;
public:
    // constructor
    CAnalysis_summary_Base(void);
    // destructor
    virtual ~CAnalysis_summary_Base(void);

    // type info
    DECLARE_INTERNAL_TYPE_INFO();

    /////////////////////////////////////////////////////////////////////////////
    class NCBI_PEPXML_EXPORT C_Attlist : public CSerialObject
    {
        typedef CSerialObject Tparent;
    public:
        // constructor
        C_Attlist(void);
        // destructor
        ~C_Attlist(void);
    
        // type info
        DECLARE_INTERNAL_TYPE_INFO();
    
        // types
        typedef string TTime;
        typedef string TAnalysis;
        typedef string TVersion;
    
        // getters
        // setters
    
        /// mandatory
        /// typedef string TTime
        ///  Check whether the Time data member has been assigned a value.
        bool IsSetTime(void) const;
        /// Check whether it is safe or not to call GetTime method.
        bool CanGetTime(void) const;
        void ResetTime(void);
        const TTime& GetTime(void) const;
        void SetTime(const TTime& value);
        TTime& SetTime(void);
    
        /// mandatory
        /// typedef string TAnalysis
        ///  Check whether the Analysis data member has been assigned a value.
        bool IsSetAnalysis(void) const;
        /// Check whether it is safe or not to call GetAnalysis method.
        bool CanGetAnalysis(void) const;
        void ResetAnalysis(void);
        const TAnalysis& GetAnalysis(void) const;
        void SetAnalysis(const TAnalysis& value);
        TAnalysis& SetAnalysis(void);
    
        /// optional
        /// typedef string TVersion
        ///  Check whether the Version data member has been assigned a value.
        bool IsSetVersion(void) const;
        /// Check whether it is safe or not to call GetVersion method.
        bool CanGetVersion(void) const;
        void ResetVersion(void);
        const TVersion& GetVersion(void) const;
        void SetVersion(const TVersion& value);
        TVersion& SetVersion(void);
    
        /// Reset the whole object
        void Reset(void);
    
    
    private:
        // Prohibit copy constructor and assignment operator
        C_Attlist(const C_Attlist&);
        C_Attlist& operator=(const C_Attlist&);
    
        // data
        Uint4 m_set_State[1];
        string m_Time;
        string m_Analysis;
        string m_Version;
    };
    // types
    typedef C_Attlist TAttlist;
    typedef list< CRef< CPeptideprophet_summary > > TPeptideprophet_summary;
    typedef list< CRef< CInteract_summary > > TInteract_summary;
    typedef list< CRef< CLibra_summary > > TLibra_summary;
    typedef list< CRef< CAsapratio_summary > > TAsapratio_summary;
    typedef list< CRef< CXpressratio_summary > > TXpressratio_summary;

    // getters
    // setters

    /// mandatory
    /// typedef C_Attlist TAttlist
    ///  Check whether the Attlist data member has been assigned a value.
    bool IsSetAttlist(void) const;
    /// Check whether it is safe or not to call GetAttlist method.
    bool CanGetAttlist(void) const;
    void ResetAttlist(void);
    const TAttlist& GetAttlist(void) const;
    void SetAttlist(TAttlist& value);
    TAttlist& SetAttlist(void);

    /// optional
    /// typedef list< CRef< CPeptideprophet_summary > > TPeptideprophet_summary
    ///  Check whether the Peptideprophet_summary data member has been assigned a value.
    bool IsSetPeptideprophet_summary(void) const;
    /// Check whether it is safe or not to call GetPeptideprophet_summary method.
    bool CanGetPeptideprophet_summary(void) const;
    void ResetPeptideprophet_summary(void);
    const TPeptideprophet_summary& GetPeptideprophet_summary(void) const;
    TPeptideprophet_summary& SetPeptideprophet_summary(void);

    /// optional
    /// typedef list< CRef< CInteract_summary > > TInteract_summary
    ///  Check whether the Interact_summary data member has been assigned a value.
    bool IsSetInteract_summary(void) const;
    /// Check whether it is safe or not to call GetInteract_summary method.
    bool CanGetInteract_summary(void) const;
    void ResetInteract_summary(void);
    const TInteract_summary& GetInteract_summary(void) const;
    TInteract_summary& SetInteract_summary(void);

    /// optional
    /// typedef list< CRef< CLibra_summary > > TLibra_summary
    ///  Check whether the Libra_summary data member has been assigned a value.
    bool IsSetLibra_summary(void) const;
    /// Check whether it is safe or not to call GetLibra_summary method.
    bool CanGetLibra_summary(void) const;
    void ResetLibra_summary(void);
    const TLibra_summary& GetLibra_summary(void) const;
    TLibra_summary& SetLibra_summary(void);

    /// optional
    /// typedef list< CRef< CAsapratio_summary > > TAsapratio_summary
    ///  Check whether the Asapratio_summary data member has been assigned a value.
    bool IsSetAsapratio_summary(void) const;
    /// Check whether it is safe or not to call GetAsapratio_summary method.
    bool CanGetAsapratio_summary(void) const;
    void ResetAsapratio_summary(void);
    const TAsapratio_summary& GetAsapratio_summary(void) const;
    TAsapratio_summary& SetAsapratio_summary(void);

    /// optional
    /// typedef list< CRef< CXpressratio_summary > > TXpressratio_summary
    ///  Check whether the Xpressratio_summary data member has been assigned a value.
    bool IsSetXpressratio_summary(void) const;
    /// Check whether it is safe or not to call GetXpressratio_summary method.
    bool CanGetXpressratio_summary(void) const;
    void ResetXpressratio_summary(void);
    const TXpressratio_summary& GetXpressratio_summary(void) const;
    TXpressratio_summary& SetXpressratio_summary(void);

    /// Reset the whole object
    virtual void Reset(void);


private:
    // Prohibit copy constructor and assignment operator
    CAnalysis_summary_Base(const CAnalysis_summary_Base&);
    CAnalysis_summary_Base& operator=(const CAnalysis_summary_Base&);

    // data
    Uint4 m_set_State[1];
    CRef< TAttlist > m_Attlist;
    list< CRef< CPeptideprophet_summary > > m_Peptideprophet_summary;
    list< CRef< CInteract_summary > > m_Interact_summary;
    list< CRef< CLibra_summary > > m_Libra_summary;
    list< CRef< CAsapratio_summary > > m_Asapratio_summary;
    list< CRef< CXpressratio_summary > > m_Xpressratio_summary;
};






///////////////////////////////////////////////////////////
///////////////////// inline methods //////////////////////
///////////////////////////////////////////////////////////
inline
bool CAnalysis_summary_Base::C_Attlist::IsSetTime(void) const
{
    return ((m_set_State[0] & 0x3) != 0);
}

inline
bool CAnalysis_summary_Base::C_Attlist::CanGetTime(void) const
{
    return IsSetTime();
}

inline
const CAnalysis_summary_Base::C_Attlist::TTime& CAnalysis_summary_Base::C_Attlist::GetTime(void) const
{
    if (!CanGetTime()) {
        ThrowUnassigned(0);
    }
    return m_Time;
}

inline
void CAnalysis_summary_Base::C_Attlist::SetTime(const CAnalysis_summary_Base::C_Attlist::TTime& value)
{
    m_Time = value;
    m_set_State[0] |= 0x3;
}

inline
CAnalysis_summary_Base::C_Attlist::TTime& CAnalysis_summary_Base::C_Attlist::SetTime(void)
{
#ifdef _DEBUG
    if (!IsSetTime()) {
        m_Time = UnassignedString();
    }
#endif
    m_set_State[0] |= 0x1;
    return m_Time;
}

inline
bool CAnalysis_summary_Base::C_Attlist::IsSetAnalysis(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAnalysis_summary_Base::C_Attlist::CanGetAnalysis(void) const
{
    return IsSetAnalysis();
}

inline
const CAnalysis_summary_Base::C_Attlist::TAnalysis& CAnalysis_summary_Base::C_Attlist::GetAnalysis(void) const
{
    if (!CanGetAnalysis()) {
        ThrowUnassigned(1);
    }
    return m_Analysis;
}

inline
void CAnalysis_summary_Base::C_Attlist::SetAnalysis(const CAnalysis_summary_Base::C_Attlist::TAnalysis& value)
{
    m_Analysis = value;
    m_set_State[0] |= 0xc;
}

inline
CAnalysis_summary_Base::C_Attlist::TAnalysis& CAnalysis_summary_Base::C_Attlist::SetAnalysis(void)
{
#ifdef _DEBUG
    if (!IsSetAnalysis()) {
        m_Analysis = UnassignedString();
    }
#endif
    m_set_State[0] |= 0x4;
    return m_Analysis;
}

inline
bool CAnalysis_summary_Base::C_Attlist::IsSetVersion(void) const
{
    return ((m_set_State[0] & 0x30) != 0);
}

inline
bool CAnalysis_summary_Base::C_Attlist::CanGetVersion(void) const
{
    return IsSetVersion();
}

inline
const CAnalysis_summary_Base::C_Attlist::TVersion& CAnalysis_summary_Base::C_Attlist::GetVersion(void) const
{
    if (!CanGetVersion()) {
        ThrowUnassigned(2);
    }
    return m_Version;
}

inline
void CAnalysis_summary_Base::C_Attlist::SetVersion(const CAnalysis_summary_Base::C_Attlist::TVersion& value)
{
    m_Version = value;
    m_set_State[0] |= 0x30;
}

inline
CAnalysis_summary_Base::C_Attlist::TVersion& CAnalysis_summary_Base::C_Attlist::SetVersion(void)
{
#ifdef _DEBUG
    if (!IsSetVersion()) {
        m_Version = UnassignedString();
    }
#endif
    m_set_State[0] |= 0x10;
    return m_Version;
}

inline
bool CAnalysis_summary_Base::IsSetAttlist(void) const
{
    return m_Attlist.NotEmpty();
}

inline
bool CAnalysis_summary_Base::CanGetAttlist(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TAttlist& CAnalysis_summary_Base::GetAttlist(void) const
{
    if ( !m_Attlist ) {
        const_cast<CAnalysis_summary_Base*>(this)->ResetAttlist();
    }
    return (*m_Attlist);
}

inline
CAnalysis_summary_Base::TAttlist& CAnalysis_summary_Base::SetAttlist(void)
{
    if ( !m_Attlist ) {
        ResetAttlist();
    }
    return (*m_Attlist);
}

inline
bool CAnalysis_summary_Base::IsSetPeptideprophet_summary(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAnalysis_summary_Base::CanGetPeptideprophet_summary(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TPeptideprophet_summary& CAnalysis_summary_Base::GetPeptideprophet_summary(void) const
{
    return m_Peptideprophet_summary;
}

inline
CAnalysis_summary_Base::TPeptideprophet_summary& CAnalysis_summary_Base::SetPeptideprophet_summary(void)
{
    m_set_State[0] |= 0x4;
    return m_Peptideprophet_summary;
}

inline
bool CAnalysis_summary_Base::IsSetInteract_summary(void) const
{
    return ((m_set_State[0] & 0x30) != 0);
}

inline
bool CAnalysis_summary_Base::CanGetInteract_summary(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TInteract_summary& CAnalysis_summary_Base::GetInteract_summary(void) const
{
    return m_Interact_summary;
}

inline
CAnalysis_summary_Base::TInteract_summary& CAnalysis_summary_Base::SetInteract_summary(void)
{
    m_set_State[0] |= 0x10;
    return m_Interact_summary;
}

inline
bool CAnalysis_summary_Base::IsSetLibra_summary(void) const
{
    return ((m_set_State[0] & 0xc0) != 0);
}

inline
bool CAnalysis_summary_Base::CanGetLibra_summary(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TLibra_summary& CAnalysis_summary_Base::GetLibra_summary(void) const
{
    return m_Libra_summary;
}

inline
CAnalysis_summary_Base::TLibra_summary& CAnalysis_summary_Base::SetLibra_summary(void)
{
    m_set_State[0] |= 0x40;
    return m_Libra_summary;
}

inline
bool CAnalysis_summary_Base::IsSetAsapratio_summary(void) const
{
    return ((m_set_State[0] & 0x300) != 0);
}

inline
bool CAnalysis_summary_Base::CanGetAsapratio_summary(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TAsapratio_summary& CAnalysis_summary_Base::GetAsapratio_summary(void) const
{
    return m_Asapratio_summary;
}

inline
CAnalysis_summary_Base::TAsapratio_summary& CAnalysis_summary_Base::SetAsapratio_summary(void)
{
    m_set_State[0] |= 0x100;
    return m_Asapratio_summary;
}

inline
bool CAnalysis_summary_Base::IsSetXpressratio_summary(void) const
{
    return ((m_set_State[0] & 0xc00) != 0);
}

inline
bool CAnalysis_summary_Base::CanGetXpressratio_summary(void) const
{
    return true;
}

inline
const CAnalysis_summary_Base::TXpressratio_summary& CAnalysis_summary_Base::GetXpressratio_summary(void) const
{
    return m_Xpressratio_summary;
}

inline
CAnalysis_summary_Base::TXpressratio_summary& CAnalysis_summary_Base::SetXpressratio_summary(void)
{
    m_set_State[0] |= 0x400;
    return m_Xpressratio_summary;
}

///////////////////////////////////////////////////////////
////////////////// end of inline methods //////////////////
///////////////////////////////////////////////////////////





END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // ALGO_MS_FORMATS_PEPXML_ANALYSIS_SUMMARY_BASE_HPP
