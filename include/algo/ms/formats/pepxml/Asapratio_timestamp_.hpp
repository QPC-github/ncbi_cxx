/* $Id$
 * ===========================================================================
 *
 *                            PUBLIC DOMAIN NOTICE
 *               National Center for Biotechnology Information
 *
 *  This software/database is a "United States Government Work" under the
 *  terms of the United States Copyright Act.  It was written as part of
 *  the author's official duties as a United States Government employee and
 *  thus cannot be copyrighted.  This software/database is freely available
 *  to the public for use. The National Library of Medicine and the U.S.
 *  Government have not placed any restriction on its use or reproduction.
 *
 *  Although all reasonable efforts have been taken to ensure the accuracy
 *  and reliability of the software and data, the NLM and the U.S.
 *  Government do not and cannot warrant the performance or results that
 *  may be obtained by using this software or data. The NLM and the U.S.
 *  Government disclaim all warranties, express or implied, including
 *  warranties of performance, merchantability or fitness for any particular
 *  purpose.
 *
 *  Please cite the author in any work or product based on this material.
 *
 * ===========================================================================
 *
 */

/// @file Asapratio_timestamp_.hpp
/// Data storage class.
///
/// This file was generated by application DATATOOL
/// using the following specifications:
/// 'pepXML.xsd'.
///
/// ATTENTION:
///   Don't edit or commit this file into CVS as this file will
///   be overridden (by DATATOOL) without warning!

#ifndef ALGO_MS_FORMATS_PEPXML_ASAPRATIO_TIMESTAMP_BASE_HPP
#define ALGO_MS_FORMATS_PEPXML_ASAPRATIO_TIMESTAMP_BASE_HPP

// standard includes
#include <serial/serialbase.hpp>

// generated includes
#include <string>

BEGIN_NCBI_SCOPE

#ifndef BEGIN_objects_SCOPE
#  define BEGIN_objects_SCOPE BEGIN_SCOPE(objects)
#  define END_objects_SCOPE END_SCOPE(objects)
#endif
BEGIN_objects_SCOPE // namespace ncbi::objects::


// generated classes

/////////////////////////////////////////////////////////////////////////////
class NCBI_PEPXML_EXPORT CAsapratio_timestamp_Base : public CSerialObject
{
    typedef CSerialObject Tparent;
public:
    // constructor
    CAsapratio_timestamp_Base(void);
    // destructor
    virtual ~CAsapratio_timestamp_Base(void);

    // type info
    DECLARE_INTERNAL_TYPE_INFO();

    /////////////////////////////////////////////////////////////////////////////
    class NCBI_PEPXML_EXPORT C_Attlist : public CSerialObject
    {
        typedef CSerialObject Tparent;
    public:
        // constructor
        C_Attlist(void);
        // destructor
        ~C_Attlist(void);
    
        // type info
        DECLARE_INTERNAL_TYPE_INFO();
    
        // types
        typedef string TQuant_label_masses;
        typedef string TStatic_quant_label;
    
        // getters
        // setters
    
        /// optional
        /// typedef string TQuant_label_masses
        ///  Check whether the Quant_label_masses data member has been assigned a value.
        bool IsSetQuant_label_masses(void) const;
        /// Check whether it is safe or not to call GetQuant_label_masses method.
        bool CanGetQuant_label_masses(void) const;
        void ResetQuant_label_masses(void);
        const TQuant_label_masses& GetQuant_label_masses(void) const;
        void SetQuant_label_masses(const TQuant_label_masses& value);
        TQuant_label_masses& SetQuant_label_masses(void);
    
        /// optional
        /// typedef string TStatic_quant_label
        ///  Check whether the Static_quant_label data member has been assigned a value.
        bool IsSetStatic_quant_label(void) const;
        /// Check whether it is safe or not to call GetStatic_quant_label method.
        bool CanGetStatic_quant_label(void) const;
        void ResetStatic_quant_label(void);
        const TStatic_quant_label& GetStatic_quant_label(void) const;
        void SetStatic_quant_label(const TStatic_quant_label& value);
        TStatic_quant_label& SetStatic_quant_label(void);
    
        /// Reset the whole object
        void Reset(void);
    
    
    private:
        // Prohibit copy constructor and assignment operator
        C_Attlist(const C_Attlist&);
        C_Attlist& operator=(const C_Attlist&);
    
        // data
        Uint4 m_set_State[1];
        string m_Quant_label_masses;
        string m_Static_quant_label;
    };
    // types
    typedef C_Attlist TAttlist;

    // getters
    // setters

    /// mandatory
    /// typedef C_Attlist TAttlist
    ///  Check whether the Attlist data member has been assigned a value.
    bool IsSetAttlist(void) const;
    /// Check whether it is safe or not to call GetAttlist method.
    bool CanGetAttlist(void) const;
    void ResetAttlist(void);
    const TAttlist& GetAttlist(void) const;
    void SetAttlist(TAttlist& value);
    TAttlist& SetAttlist(void);

    /// mandatory
    ///  Check whether the Asapratio_timestamp data member has been assigned a value.
    bool IsSetAsapratio_timestamp(void) const;
    /// Check whether it is safe or not to call GetAsapratio_timestamp method.
    bool CanGetAsapratio_timestamp(void) const;
    void ResetAsapratio_timestamp(void);
    void SetAsapratio_timestamp(void);

    /// Reset the whole object
    virtual void Reset(void);


private:
    // Prohibit copy constructor and assignment operator
    CAsapratio_timestamp_Base(const CAsapratio_timestamp_Base&);
    CAsapratio_timestamp_Base& operator=(const CAsapratio_timestamp_Base&);

    // data
    Uint4 m_set_State[1];
    CRef< TAttlist > m_Attlist;
};






///////////////////////////////////////////////////////////
///////////////////// inline methods //////////////////////
///////////////////////////////////////////////////////////
inline
bool CAsapratio_timestamp_Base::C_Attlist::IsSetQuant_label_masses(void) const
{
    return ((m_set_State[0] & 0x3) != 0);
}

inline
bool CAsapratio_timestamp_Base::C_Attlist::CanGetQuant_label_masses(void) const
{
    return IsSetQuant_label_masses();
}

inline
const CAsapratio_timestamp_Base::C_Attlist::TQuant_label_masses& CAsapratio_timestamp_Base::C_Attlist::GetQuant_label_masses(void) const
{
    if (!CanGetQuant_label_masses()) {
        ThrowUnassigned(0);
    }
    return m_Quant_label_masses;
}

inline
void CAsapratio_timestamp_Base::C_Attlist::SetQuant_label_masses(const CAsapratio_timestamp_Base::C_Attlist::TQuant_label_masses& value)
{
    m_Quant_label_masses = value;
    m_set_State[0] |= 0x3;
}

inline
CAsapratio_timestamp_Base::C_Attlist::TQuant_label_masses& CAsapratio_timestamp_Base::C_Attlist::SetQuant_label_masses(void)
{
#ifdef _DEBUG
    if (!IsSetQuant_label_masses()) {
        m_Quant_label_masses = UnassignedString();
    }
#endif
    m_set_State[0] |= 0x1;
    return m_Quant_label_masses;
}

inline
bool CAsapratio_timestamp_Base::C_Attlist::IsSetStatic_quant_label(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAsapratio_timestamp_Base::C_Attlist::CanGetStatic_quant_label(void) const
{
    return IsSetStatic_quant_label();
}

inline
const CAsapratio_timestamp_Base::C_Attlist::TStatic_quant_label& CAsapratio_timestamp_Base::C_Attlist::GetStatic_quant_label(void) const
{
    if (!CanGetStatic_quant_label()) {
        ThrowUnassigned(1);
    }
    return m_Static_quant_label;
}

inline
void CAsapratio_timestamp_Base::C_Attlist::SetStatic_quant_label(const CAsapratio_timestamp_Base::C_Attlist::TStatic_quant_label& value)
{
    m_Static_quant_label = value;
    m_set_State[0] |= 0xc;
}

inline
CAsapratio_timestamp_Base::C_Attlist::TStatic_quant_label& CAsapratio_timestamp_Base::C_Attlist::SetStatic_quant_label(void)
{
#ifdef _DEBUG
    if (!IsSetStatic_quant_label()) {
        m_Static_quant_label = UnassignedString();
    }
#endif
    m_set_State[0] |= 0x4;
    return m_Static_quant_label;
}

inline
bool CAsapratio_timestamp_Base::IsSetAttlist(void) const
{
    return m_Attlist.NotEmpty();
}

inline
bool CAsapratio_timestamp_Base::CanGetAttlist(void) const
{
    return true;
}

inline
const CAsapratio_timestamp_Base::TAttlist& CAsapratio_timestamp_Base::GetAttlist(void) const
{
    if ( !m_Attlist ) {
        const_cast<CAsapratio_timestamp_Base*>(this)->ResetAttlist();
    }
    return (*m_Attlist);
}

inline
CAsapratio_timestamp_Base::TAttlist& CAsapratio_timestamp_Base::SetAttlist(void)
{
    if ( !m_Attlist ) {
        ResetAttlist();
    }
    SetAsapratio_timestamp();
    return (*m_Attlist);
}

inline
bool CAsapratio_timestamp_Base::IsSetAsapratio_timestamp(void) const
{
    return ((m_set_State[0] & 0xc) != 0);
}

inline
bool CAsapratio_timestamp_Base::CanGetAsapratio_timestamp(void) const
{
    return false;
}

inline
void CAsapratio_timestamp_Base::ResetAsapratio_timestamp(void)
{
    m_set_State[0] &= ~0xc;
}

inline
void CAsapratio_timestamp_Base::SetAsapratio_timestamp(void)
{
    m_set_State[0] |= 0xc;
}

///////////////////////////////////////////////////////////
////////////////// end of inline methods //////////////////
///////////////////////////////////////////////////////////





END_objects_SCOPE // namespace ncbi::objects::

END_NCBI_SCOPE


#endif // ALGO_MS_FORMATS_PEPXML_ASAPRATIO_TIMESTAMP_BASE_HPP
